q <- ggplot(data = subset(gapminder, country %in% c("United States","Mexico","Kuwait","Israel","Greece")), aes(x = year, y = lifeExp)) +
labs(x = "year", y = "lifeExp")
# TODO 6.8
q + geom_line(aes(color = country)) + geom_point(aes(color = country)) + labs(title = "TODO 6.8: plot 8") # Plot 5 countries subset
rm(list = ls())
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
library(ggplot2)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point()
ggplot(data = gapminder, aes(x = log10(gdpPercap), y = lifeExp)) + geom_point()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point() + scale_x_log10()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point() + scale_x_log10(name = "per capita GDP (log10 scaled)")
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point() + scale_x_log10() + labs(x = "per capita GDP (log10 scaled)")
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() + labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p + geom_point()
# TODO 6.1 - Using p as a starting point, produce a scatter plot similar to the ones we have created, but with the countries from each of the five continents colored differently such that your graphic looks like this:
p + geom_point(aes(color=continent))
# TODO 6.2 - Add a least squares line to the scatter plot.
p + geom_point(aes(color=continent)) + stat_smooth(method = lm, se=FALSE)
# TODO 6.3 - The least squares line is not very visible. Make it wider.
p + geom_point(aes(color=continent)) + stat_smooth(size=3, color="green",method = lm, se=FALSE)
# TODO 6.4 - Instead of one least squares line summarizing all the countries, include separate least squares lines for each continent.
p + geom_point(aes(color=continent)) + stat_smooth(size=3, method = lm, se=FALSE, aes(color=continent))
# TODO 6.5 - Rather than least squares LINES, include a separate smoother for each continent. (Hint: You've been using method = lm. Change this to  method = loess.)
p + geom_point(aes(color=continent)) + stat_smooth(size=3, method = loess, se=FALSE, aes(color=continent))
# TODO 6.6 - So far the focus has been on life expectancy versus per capita GDP. Next we investigate how life expectancy changes over time, and limit our attention to one or a few countries. First, here is the graphic for Rwanda (do you recall what happened in Rwanda in the early to mid 1990s).
ggplot(subset(gapminder,country=="Rwanda") , aes(x = year, y = lifeExp)) + geom_line()
# TODO 6.7 - Probably adding the actual points being connected by the line segments would add clarity.
ggplot(subset(gapminder,country=="Rwanda") , aes(x = year, y = lifeExp)) + geom_line() + geom_point()
# TODO 6.8 - Choose five countries that you find interesting. Create a graphic similar to the one just created for Rwanda, but including the five countries of interest.
ggplot(subset(gapminder,country %in% c("India","Germany","Iraq","United States","Kuwait")) , aes(x = year, y = lifeExp)) + geom_line(aes(color=country)) + geom_point(aes(color=country))
rm(list = ls())
library(ggplot2)
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p <- p + geom_point(aes(color = continent)) + labs(title = "TODO 6.1: plot 1")
p
p + labs(title = "TODO 6.2: plot 2") + stat_smooth(method = lm, se = FALSE)
p + labs(title = "TODO 6.3: plot 3") + stat_smooth(method = lm, se = FALSE, color = "green", size =3)
p + labs(title = "TODO 6.4: plot 4") + stat_smooth(method = lm, se = FALSE, aes(color = continent))
p + labs(title = "TODO 6.5: plot 5") + stat_smooth(method = loess, se = FALSE, aes(color = continent))
# TODO 6 ------------------------------------------------------------------
gapminder_Rwanda <- data.frame(year<-gapminder$year[gapminder$country == "Rwanda"],
lifeExp<-gapminder$lifeExp[gapminder$country == "Rwanda"])
p <- ggplot(data = gapminder_Rwanda, aes(x = year, y = lifeExp))  +
labs(x = "year", y = "lifeExp ", title="TODO 6.6: plot 6") +geom_line()
p
p + labs(title = "TODO 6.7: plot 7") + geom_point()
gapminder_5 <- data.frame(year_5<-gapminder$year[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],
lifeExp_5<-gapminder$lifeExp[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],country<-gapminder$country[gapminder$country %in%  c("China","Finland","Germany","Norway","United States")])
p<- ggplot(data = gapminder_China,aes(x=year_5,y=lifeExp_5,color = country)) + labs(x = "year", y = "lifeExp", title = "TODO 6.8: plot 8") + geom_line() + geom_point()
p
gapminder_5 <- data.frame(year_5<-gapminder$year[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],
lifeExp_5<-gapminder$lifeExp[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],country<-gapminder$country[gapminder$country %in%  c("China","Finland","Germany","Norway","United States")])
p<- ggplot(data = gapminder_China,aes(x=year_5,y=lifeExp_5,color = country)) + labs(x = "year", y = "lifeExp", title = "TODO 6.8: plot 8") + geom_line() + geom_point()
p
p + labs(title = "TODO 6.7: plot 7") + geom_point()
gapminder_5 <- data.frame(year_5<-gapminder$year[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],
lifeExp_5<-gapminder$lifeExp[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],country<-gapminder$country[gapminder$country %in%  c("China","Finland","Germany","Norway","United States")])
p<- ggplot(data = gapminder_China,aes(x=year_5,y=lifeExp_5,color = country)) + labs(x = "year", y = "lifeExp", title = "TODO 6.8: plot 8") + geom_line() + geom_point()
p
p
p + labs(title = "TODO 6.7: plot 7") + geom_point()
gapminder_5 <- data.frame(year_5<-gapminder$year[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],
lifeExp_5<-gapminder$lifeExp[gapminder$country %in% c("China","Finland","Germany","Norway","United States")],country<-gapminder$country[gapminder$country %in%  c("China","Finland","Germany","Norway","United States")])
p<- ggplot(data = gapminder_5,aes(x=year_5,y=lifeExp_5,color = country)) + labs(x = "year", y = "lifeExp", title = "TODO 6.8: plot 8") + geom_line() + geom_point()
p
rm(list = ls())
library(ggplot2)
head(gapminder)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
#TODO 8.1: Read in LifeExp.csv and check that it was read in correctly
gapminder1 <- read.csv("LifeExp.csv", header = TRUE, na.strings = "")
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p + geom_point()
#TODO 6.1: Plot 1
p + geom_point() + aes(color=continent)
#TODO 6.2: Plot 2
p + geom_point(size=1, aes(color=continent)) + stat_smooth(method = lm, se=FALSE)
#TODO 6.3: plot 3
p + geom_point(size=1, aes(color=continent)) + stat_smooth(method = lm, se=FALSE,color="lime green", size = 2)
#TODO 6.4 : plot 4
p + geom_point(size=1, aes(color=continent)) + stat_smooth(method = lm, se=FALSE,aes(color = continent), size = 1)
#TODO 6.5 : plot 5
p + geom_point(size=1, aes(color=continent)) + stat_smooth(method = loess, se=FALSE,aes(color = continent), size = 1)
#TODO 6.6 : plot 6
Rwanda_Data<- subset(gapminder, country == "Rwanda")
Rwanda_Base_plot <-ggplot(data = Rwanda_Data, aes(x= year, y= lifeExp)) + geom_line()
#TODO 6.7 : plot 7
Rwanda_Base_plot + geom_point()
#TODO 6.8 : plot 8
ggplot(data =  subset(gapminder, country %in% c("Iceland", "Ireland","Mongolia","Egypt", "Peru")), aes(x=year, y=lifeExp)) + geom_line(aes(color=country))+geom_point(aes(color = country))
library(ggplot2)
#read in the gapminder data and output the structure
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
#Set up plot
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
# TODO1 -------------------------------------------------------------------
#Have the plot out colored pointes colored by continent
p <- p + geom_point(aes(color = continent)) + labs(title = "TODO 6.1: plot 1")
p
# TODO 2 ------------------------------------------------------------------
#Add a least squares line for all continents
p + stat_smooth(method = lm, se=FALSE) + labs(title = "TODO 6.2: plot 2")
# TODO 3 ------------------------------------------------------------------
#Make the line easier to see
p + stat_smooth(method = lm, color = "green", size = 2, se = FALSE) + labs(title = "TODO 6.3: plot 3")
# TODO 4 ------------------------------------------------------------------
#Make leaset squares lines for each continent
p  + stat_smooth(method = lm, se = FALSE, aes(color = continent), size = 1.5)+ labs(title = "TODO 6.4: plot 4")
# TODO 5 ------------------------------------------------------------------
#smoothed least square
p  + stat_smooth(method = loess, se = FALSE, aes(color = continent), size = 1.5)+ labs(title = "TODO 6.5: plot 5")
# TODO 6 ------------------------------------------------------------------
#created Country trends over time in a line graph
p1 <- ggplot(subset(gapminder, country == "Rwanda"), aes(x = year, y = lifeExp)) + labs(x = "year", y = "life expectancy") + geom_line() + labs(title = "TODO 6.6: plot 6")
p1
# TODO 7 ------------------------------------------------------------------
#add points to the line
p1 <- p1 + geom_point()+ labs(title = "TODO 6.7: plot 7")
p1
#make country trends for chosen countries
p2 <- ggplot(subset(gapminder, country == "China"| country =="Finland"| country =="Germany"| country == "Norway"| country == "United States"), aes(x = year, y = lifeExp, color = country))
p2 <- p2 + labs(x = "year", y = "life expectancy") + geom_line() + geom_point() + labs(title = "TODO 6.8: plot8")
p2
rm(list = ls())
#loading libraries:
library(ggplot2)
#reading in data:
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
#TODO 6.1: Plot 1 - Scatter plot of GDP vs. life expectancy
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent))+
scale_x_log10()+
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
#TODO 6.2: Plot 2 - Scatter plot 1 with a least squares line added
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent))+
scale_x_log10()+
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")+
stat_smooth(method = lm, se = F)
#TODO 6.3: Plot 3 - Plot 2 with edited line
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent))+
scale_x_log10()+
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")+
stat_smooth(method = lm, se = F, color = "green", size = 2)
#TODO 6.4: Plot 4 - Plot 1 with least squares line for each continent
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent))+
scale_x_log10()+
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")+
stat_smooth(method = lm, se = F, aes(color = continent),size = 2)
#TODO 6.5: Plot 5 - Plot 4 with loess method instead of least squares
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent))+
scale_x_log10()+
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")+
stat_smooth(method = loess, se = F, aes(color = continent),size = 2)
#TODO 6.6: Plot 6 - year vs life expectancy in Rwanda from 1950-present
gm_rwanda <- subset(gapminder, country == "Rwanda")
ggplot(data = gm_rwanda, aes(x = year, y = lifeExp))+
geom_line()
#TODO 6.7: Plot 7 - add geom_point to add plotted points to plot 6
ggplot(data = gm_rwanda, aes(x = year, y = lifeExp))+
geom_line()+
geom_point()
#TODO 6.8: Plot 8 - add four more countries
gm_china <- subset(gapminder, country == "China")
gm_rom <- subset(gapminder, country == "Romania")
gm_us <- subset(gapminder, country == "United States")
gm_arg <- subset(gapminder, country == "Argentina")
gm_plot <- rbind(gm_rwanda, gm_china, gm_rom,gm_us, gm_arg)
ggplot(data = gm_plot, aes(x = year, y = lifeExp))+
geom_point(aes(color = country))+
geom_line(aes(color = country))
dim(gapminder1)
#TODO 8.1: Read in LifeExp.csv and check that it was read in correctly
gapminder1 <- read.csv("LifeExp.csv", header = TRUE, na.strings = "")
dim(gapminder1)
#TODO 8.4: Change gapminder1 from wide to long format here
library(tidyr)
gapminder1 <- gather(data = gapminder1, key = year, value = lifeExp, 2:ncol(gapminder1))
#str(gapminder1)
dim(gapminder1)
gapminder1$year <- substr(x = gapminder1$year, start = 2, stop = 5)
gapminder1$year <- as.integer(gapminder1$year)
#TODO 8.5: Draw histogram here
library(ggplot2)
ggplot(gapminder1, aes(x = lifeExp)) + geom_histogram()
#TODO 8.6: Draw side boxplots here
typeof(gapminder1$year)
ggplot(gapminder1[gapminder1$year==seq(1900, 1990, by=10),], aes(x = year, y = lifeExp)) + geom_boxplot(aes(group = year))
ggplot(data = subset(gapminder1, year == c(1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970,1980, 1990)),
aes(x = year, y = lifeExp)) + geom_boxplot(color = "black", fill = "lightblue")
?group
?group
ggplot(data = subset(gapminder1, country == c("United States", "China", "India", "Indonesia", "Brazil")), aes(x = year, y = lifeExp, color = country)) + geom_line()
#TODO 8.6: Draw side boxplots here
typeof(gapminder1$year)
ggplot(gapminder1[gapminder1$year==seq(1900, 1990, by=10),], aes(x = year, y = lifeExp)) + geom_boxplot(aes(group = year))
ggplot(data = subset(gapminder1, year == c(1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970,1980, 1990)),
aes(x = year, y = lifeExp)) + geom_boxplot(color = "black", fill = "lightblue")
##TODO 8.7: Draw line graph here
ggplot(gapminder1[gapminder1$country=="United States",]) + geom_line(aes(x = year, y = lifeExp))
#or
ggplot(subset(gapminder1, country == "United States")) + geom_line(aes(x = year, y = lifeExp))
#or
ggplot(data = subset(gapminder1, country == "United States"), aes(x=year, y=lifeExp)) + geom_line()
names(gapminder1)
##TODO 8.8: Draw line graph grouped by country here
ggplot(gapminder1[gapminder1$country %in% c("China","India","United States","Indonesia","Brazil"),]) + geom_line(aes(x = year, y = lifeExp, color=country))
##TODO 8.8: Draw line graph grouped by country here
ggplot(gapminder1[gapminder1$country %in% c("China","India","United States","Indonesia","Brazil"),]) + geom_line(aes(x = year, y = lifeExp, color=country))
rm(list = ls())
#TODO 8.1: Read in LifeExp.csv and check that it was read in correctly
gapminder1 <- read.csv("LifeExp.csv", header = TRUE, na.strings = "")
dim(gapminder1)
#TODO 8.2: rename name of the first column to "country"
names(gapminder1)[1] <- "country"
#TODO 8.3: calculate mean, median, minimum, and maximum life expetancy for each year here
apply(gapminder1[,2:ncol(gapminder1)], MARGIN = 2, mean, na.rm = TRUE)
apply(gapminder1[,2:ncol(gapminder1)], MARGIN = 2, median, na.rm = TRUE)
apply(gapminder1[,2:ncol(gapminder1)], MARGIN = 2, min, na.rm = TRUE)
apply(gapminder1[,2:ncol(gapminder1)], MARGIN = 2, max, na.rm = TRUE)
#TODO 8.4: Change gapminder1 from wide to long format here
library(tidyr)
gapminder1 <- gather(data = gapminder1, key = year, value = lifeExp, 2:ncol(gapminder1))
#str(gapminder1)
dim(gapminder1)
gapminder1$year <- substr(x = gapminder1$year, start = 2, stop = 5)
gapminder1$year <- as.integer(gapminder1$year)
#TODO 8.5: Draw histogram here
library(ggplot2)
ggplot(gapminder1, aes(x = lifeExp)) + geom_histogram()
#TODO 8.6: Draw side boxplots here
typeof(gapminder1$year)
ggplot(gapminder1[gapminder1$year==seq(1900, 1990, by=10),], aes(x = year, y = lifeExp)) + geom_boxplot(aes(group = year))
##TODO 8.7: Draw line graph here
ggplot(gapminder1[gapminder1$country=="United States",]) + geom_line(aes(x = year, y = lifeExp))
#or
ggplot(subset(gapminder1, country == "United States")) + geom_line(aes(x = year, y = lifeExp))
#or
ggplot(data = subset(gapminder1, country == "United States"), aes(x=year, y=lifeExp)) + geom_line()
##TODO 8.8: Draw line graph grouped by country here
ggplot(gapminder1[gapminder1$country %in% c("China","India","United States","Indonesia","Brazil"),]) + geom_line(aes(x = year, y = lifeExp, color=country))
ggplot(gapminder1, aes(x = lifeExp))
##TODO 8.8: Draw line graph grouped by country here
ggplot(gapminder1[gapminder1$country %in% c("China","India","United States","Indonesia","Brazil"),]) + geom_line(aes(x = year, y = lifeExp, color=country))
ggplot(data = subset(gapminder1, country == c("United States", "China", "India", "Indonesia", "Brazil")), aes(x = year, y = lifeExp, color = country)) + geom_line()
ggplot(data = subset(gapminder1, country == c("United States", "China", "India", "Indonesia", "Brazil"))) + geom_line(aes(x = year, y = lifeExp, color = country))
ggplot(data = subset(gapminder1, country %in% c("United States", "China", "India", "Indonesia", "Brazil")), aes(x = year, y = lifeExp, color = country)) + geom_line()
rm(list = ls())
library(ggplot2)
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
unique(gapminder$country)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p + geom_point()
# TODO 1 ------------------------------------------------------------------
p + geom_point(aes(color = continent)) + labs(title =  "TODO: plot 1")
p + geom_point(aes(color = continent)) + labs(title =  "TODO: plot 2") + stat_smooth(method = lm, se=FALSE)
p + geom_point(aes(color = continent)) + labs(title =  "TODO: plot 3") + stat_smooth(method = lm, se=FALSE, colour="green", lwd=2)
p + geom_point(aes(color = continent)) + labs(title =  "TODO: plot 4") + stat_smooth(method = lm, se=FALSE, aes(color=continent))
p + geom_point(aes(color = continent)) + labs(title =  "TODO: plot 5") + stat_smooth(method = loess, se=FALSE, aes(color=continent))
ggplot(data=gapminder,aes(x = year, y = lifeExp))  + geom_line(data = subset(gapminder, country %in% c("Rwanda"))) +
labs(title =  "TODO: plot 6")
ggplot(data=gapminder,aes(x = year, y = lifeExp))  + geom_line(data = subset(gapminder, country %in% c("Rwanda"))) +
labs(title =  "TODO: plot 7") +geom_point(data = subset(gapminder, country %in% c("Rwanda")))
# TODO 8 ------------------------------------------------------------------
ggplot(data=gapminder,aes(x = year, y = lifeExp)) +
geom_line(data = subset(gapminder, country %in% c("China", "Finland", "Germany", "Norway", "United States")), aes(color=country)) +
labs(title =  "TODO: plot 8") +
geom_point(data = subset(gapminder, country %in% c("China", "Finland", "Germany", "Norway", "United States")), aes(color=country))
rm(list = ls())
library(ggplot2)
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy") + geom_point(aes(color = continent))
p + labs(title = "TODO: Polt 1")
p + stat_smooth(method = lm, se=FALSE) + labs(title = "TODO: Polt 2")
p + stat_smooth(method = lm, se=FALSE, size = 2, color = "green") + labs(title = "TODO: Polt 3")
p + stat_smooth(method = lm, se=FALSE, size = 2, aes(color= continent)) + labs(title = "TODO: Polt 4")
p + stat_smooth(method = loess, se=FALSE, size = 2, aes(color= continent)) + labs(title = "TODO: Polt 5")
gapminder_R <- subset(gapminder, country=="Rwanda")
p <- ggplot(data = gapminder_R, aes(x = year, y = lifeExp)) +
labs(x = "year", y = "life expectancy") + geom_line()
p + labs(title = "TODO: Polt 6")
p + geom_point() + labs(title = "TODO: Polt 7")
gapminder_Five <- subset(gapminder, country %in% c("Japan","China",
"United States","United Kingdom","India"))
p <- ggplot(data = gapminder_Five, aes(x = year, y = lifeExp)) +
labs(x = "year", y = "life expectancy") + geom_line(aes(color=country)) + labs(title = "TODO: Polt 8")
p
rm(list = ls())
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
library(ggplot2)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p + geom_point()
p + geom_point(aes(color = continent))
p + geom_point(aes(color = continent)) + stat_smooth(method = lm, se = FALSE)
p + geom_point(aes(color = continent)) + stat_smooth(method = lm, se = FALSE,
color = "green4", size = 2)
p + geom_point(aes(color = continent)) + stat_smooth(method = lm, se = FALSE,
aes(color = continent))
p + geom_point(aes(color = continent)) + stat_smooth(method = loess, se = FALSE,
aes(color = continent))
ggplot(data = subset(gapminder, country == "Rwanda"), aes(x = year, y = lifeExp)) +
geom_line()
ggplot(data = subset(gapminder, country == "Rwanda"), aes(x = year, y = lifeExp)) +
geom_line() + geom_point()
ggplot(data = subset(gapminder, country %in% c("Australia", "New Zealand",
"Thailand", "Senegal", "Ireland")), aes(x = year, y = lifeExp, color = country)) +
geom_line() + geom_point()
rm(list = ls())
library(ggplot2)
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p + geom_point()
p + geom_point(aes(color = continent)) + labs(title = "TODO: plot 1")
p + geom_point(aes(color =continent)) + stat_smooth(method =lm, se=FALSE) +
labs(title = "TODO: plot 2")
p + geom_point(aes(color =continent)) + stat_smooth(method =lm, se=FALSE,
color = "green", size = 2) + labs(title = "TODO: plot 3")
p + geom_point(aes(color =continent)) + stat_smooth(method =lm, se=FALSE,
size = 2, aes(color = continent)) + labs(title = "TODO: plot 4")
p + geom_point(aes(color =continent)) + stat_smooth(method =loess,
se=FALSE, size = 2, aes(color = continent)) +
labs(title = "TODO: plot 5")
rwandaPlot <- ggplot(data = subset(gapminder, country %in% "Rwanda"), aes(x = year,
y = lifeExp)) +
labs(x = "year", y = "life expectancy", title = "TODO: plot 6")
rwandaPlot + geom_line(size=1)
rwandaPlot + geom_point(size=2) + geom_line(size=1) +
labs(x = "year", y = "life expectancy", title = "TODO: plot 7")
linePlot <- ggplot(data = subset(gapminder, country %in% c("Australia",
"Brazil", "Denmark", "Spain", "United States")), aes(x = year,
y = lifeExp)) +
labs(x = "year", y = "life expectancy", title = "TODO: plot 8")
linePlot + geom_point(size = 2, aes(color=country)) +
geom_line(size = 1, aes(color=country))
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
rm(list = ls())_
rm(list = ls())
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
library(ggplot2)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p + geom_point(aes(color = continent))
p + geom_point(aes(color = continent)) + stat_smooth(method = lm, se = FALSE)
p + geom_point(aes(color = continent)) + stat_smooth(method = lm, se = FALSE, size = 3, color = "green")
p + geom_point(aes(color = continent)) + stat_smooth(method = lm, se = FALSE,size = 2, aes(color = continent))
p + geom_point(aes(color = continent)) + stat_smooth(method = loess, se = FALSE,size = 2, aes(color = continent))
# Todo 6 ------------------------------------------------------------------
rwanda <- subset(gapminder, country == 'Rwanda')
ggplot(data = rwanda, aes(x = year, y = lifeExp)) + geom_line()
# Todo 7 ------------------------------------------------------------------
ggplot(data = rwanda, aes(x = year, y = lifeExp)) + geom_point(size = 3) + geom_line()
# Todo 8 ------------------------------------------------------------------
five <-  subset(gapminder, country %in% c('China','Finland', 'Germany','Norway','United States'))
c <- ggplot(data = five, aes(x = year, y = lifeExp))
c + geom_point(aes(color = country),size = 3) + geom_line(aes(color = country),size = 1)
library(ggplot2)
gapminder <- read.delim("http://blue.for.msu.edu/FOR875/data/gapminder.tsv", header = TRUE)
str(gapminder)
p <- ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + scale_x_log10() +
labs(x = "per capita GDP (log10 scaled)", y = "life expectancy")
p + geom_point()
# TODO: plot 1 ------------------------------------------------------------
p1 <- p + geom_point(aes(color = continent))
p1 + labs(title = "TODO: plot 1")
# TODO: plot 2 ------------------------------------------------------------
p2 <- p1 + stat_smooth(method = lm, se=FALSE)
p2 + labs(title = "TODO: plot 2")
# TODO: plot 3 ------------------------------------------------------------
p3 <- p1 + stat_smooth(method = lm, se=FALSE, size = 2, color = "green")
p3 + labs(title = "TODO: plot 3")
# TODO: plot 4 ------------------------------------------------------------
p4 <- p1 + stat_smooth(method = lm, se=FALSE, aes(color = continent))
p4  + labs(title = "TODO: plot 4")
# TODO: plot 5 ------------------------------------------------------------
p5 <- p1 + stat_smooth(method = loess, se=FALSE, aes(color = continent))
p5 + labs(title = "TODO: plot 5")
# TODO: plot 6 ------------------------------------------------------------
p6 <- ggplot(data = subset(gapminder, country == "Rwanda"), aes(x = year, y = lifeExp)) + geom_line()
p6  + labs(title = "TODO: plot 6")
# TODO: plot 7 ------------------------------------------------------------
p7 <- p6 + geom_point()
p7 + labs(title = "TODO: plot 7")
# TODO: plot 8 ------------------------------------------------------------
gapminderPlot8 <- gapminder[gapminder$country %in% c("France", "Bulgaria", "Finland", "Gabon", "Netherlands"),]
p8 <- ggplot(data = gapminderPlot8, aes(x = year, y = lifeExp, color = country)) + geom_line() + geom_point()
p8 + labs(title = "TODO: plot 8")
gapminder2 <- read.csv("LifeExp.csv")
dim(gapminder2)
names(gapminder2)[1] <- "country"
gapminder2 <- gather(data = gapminder2, key = year, value = lifeExp, 2:ncol(gapminer2))
gapminder2 <- gather(data = gapminder2, key = year, value = lifeExp, 2:ncol(gapminder2))
head(gapminder2)
gapminder1$year <- substr(x = gapminder1$year, start = 2, stop = 5)
gapminder2$year <- substr(x = gapminder1$year, start = 2, stop = 5)
gapminder2$year <- substr(x = gapminder2$year, start = 2, stop = 5)
gapminder2$year
ncol(gapminder2)
rm(list = ls())
#TODO 8.1: Read in LifeExp.csv and check that it was read in correctly
gapminder1 <- read.csv("LifeExp.csv", header = TRUE, na.strings = "")
gapminder2 <- read.csv("LifeExp.csv")
dim(gapminder1)
dim(gapminder2)
#TODO 8.2: rename name of the first column to "country"
names(gapminder1)[1] <- "country"
#TODO 8.4: Change gapminder1 from wide to long format here
library(tidyr)
gapminder1 <- gather(data = gapminder1, key = year, value = lifeExp, 2:ncol(gapminder1))
gapminder2 <- gather(data = gapminder2, key = year, value = lifeExp, 2:ncol(gapminder2))
str(gapminder1)
str(gapminder2)
#TODO 8.1: Read in LifeExp.csv and check that it was read in correctly
gapminder1 <- read.csv("LifeExp.csv", header = TRUE, na.strings = "")
na = c("", "NA"))
library(tidyr)
gapminder1 <- gather(data = gapminder1, key = year, value = lifeExp, 2:218)
str(gapminder1)
setwd("~/Documents/01-summer2018/for875-18/06-workingWithData/ex7")
purl("exercise_7_solutions.Rmd")
library(knitr)
purl("exercise_7_solutions.Rmd")
## ----global_options------------------------------------------------------
knitr::opts_chunk$set(comment = NA, tidy = TRUE)
## ---- cache = TRUE-------------------------------------------------------
WorldBank <- read.csv("http://blue.for.msu.edu/FOR875/data/WorldBank.csv", header = TRUE)
str(WorldBank)
## ------------------------------------------------------------------------
levels(WorldBank$region)
## ------------------------------------------------------------------------
WorldBank$region2 <- WorldBank$region
levels(WorldBank$region2) <- c("EastAsia", "Europe", "LatAmer", "MideastAndNorthAfrica", "NorthAmer", "SouthAsia", "SubSaharanAfrica")
## ------------------------------------------------------------------------
table(WorldBank$region2)
## ------------------------------------------------------------------------
sort(table(WorldBank$region2))
sort(table(WorldBank$region2), decreasing = TRUE)
## ------------------------------------------------------------------------
#Number of unique years
n.years <- length(unique(WorldBank$year))
## ------------------------------------------------------------------------
#Use table to tabulate the number of countries per region
sort(table(WorldBank$region2))/n.years
## ------------------------------------------------------------------------
table(WorldBank$life.expectancy > 60)
## ------------------------------------------------------------------------
table(WorldBank$life.expectancy > 60, dnn = "Life Expectancy more than 60 years")
## ------------------------------------------------------------------------
table(WorldBank$region2, WorldBank$life.expectancy > 60)
## ------------------------------------------------------------------------
# TODO 7.1: Create the labeled two-way table here
table(WorldBank$region2, WorldBank$life.expectancy > 60, dnn = c("Region","Life Expectancy more than 60 years"))
## ------------------------------------------------------------------------
with(WorldBank, table(life.expectancy > 60, dnn = "Life Expectancy more than 60 years"))
## ------------------------------------------------------------------------
# TODO 7.2: Create the table here
with(WorldBank, table(region2, life.expectancy > 60, dnn = c("Region","Life Expectancy more than 60 years")))
## ------------------------------------------------------------------------
with(WorldBank, mean(life.expectancy[region2 == "EastAsia"]))
## ------------------------------------------------------------------------
# TODO 7.3: Compute the mean of the non-missing life expectancies for EastAsia here
with(WorldBank, mean(life.expectancy[region2 == "EastAsia"], na.rm=TRUE))
## ------------------------------------------------------------------------
with(WorldBank, mean(life.expectancy[region2 == "Europe"], na.rm = TRUE))
with(WorldBank, mean(life.expectancy[region2 == "LatAmer"], na.rm = TRUE))
## ------------------------------------------------------------------------
with(WorldBank, tapply(X = life.expectancy, INDEX = region2, FUN = mean, na.rm = TRUE ))
## ------------------------------------------------------------------------
with(WorldBank, tapply(X = life.expectancy, INDEX = list(region2, income), FUN = mean, na.rm = TRUE ))
## ------------------------------------------------------------------------
with(WorldBank, mean(life.expectancy[0 <= latitude & latitude < 23.5], na.rm = TRUE))
## ------------------------------------------------------------------------
# TODO 7.4: Compute the mean life expectancy for the southern tropics here
with(WorldBank, mean(life.expectancy[-23.5 <= latitude & latitude < 0], na.rm = TRUE))
## ------------------------------------------------------------------------
x <- 0:50
cut(x, breaks = c(0, 10, 20, 30, 40, 50))
cut(x, breaks = c(0, 10, 20, 30, 40, 50), include.lowest = TRUE)
cut(x, breaks = c(0, 10, 20, 30, 40, 50), right = FALSE)
cut(x, breaks = c(0, 10, 20, 30, 40, 50), right = FALSE, include.lowest = TRUE)
cut(x, breaks = c(0, 10, 20, 30, 40, 50), labels = c("low", "midlow", "mid", "midhigh", "high"), include.lowest = TRUE)
## ------------------------------------------------------------------------
# TODO 7.5: Calculate the mean life expectancies here
x <- cut(WorldBank$latitude, breaks = c(-66.5, -23.5, 0, 23.5, 66.5), include.lowest = TRUE, right = FALSE, labels=c("Southern temperate","Southern tropics","Northern tropics", "Northern temperate"))
with(WorldBank, tapply(X = life.expectancy, INDEX = x, FUN = mean, na.rm = TRUE ))
with(WorldBank, tapply(X = life.expectancy, INDEX = list(x), FUN = mean, na.rm = TRUE))
ggplot(data = subset(gapminder1, year == seq(1900,1990, by = 10)),
aes(group = year, y = lifeExp)) + geom_boxplot(color = "black", fill = "lightblue")
ggplot(data = subset(gapminder1, year == seq(1900,1990, by = 10)),
aes(group = year, y = lifeExp)) + geom_boxplot(color = "black", fill = "lightblue")
